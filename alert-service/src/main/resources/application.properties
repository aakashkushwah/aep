spring.application.name=alert-service
server.port=8091
server.servlet.context-path=/alerts

# Database connection
spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/alert_db
spring.datasource.username=postgres
spring.datasource.password=postgres

logging.level.org.drools=DEBUG
logging.level.org.kie=DEBUG

# Flyway configuration (optional)
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-description=baseline_migration
spring.flyway.sql-migration-prefix=AM1_
spring.flyway.repeatable-sql-migration-prefix=R
spring.flyway.sql-migration-separator=__
spring.flyway.sql-migration-suffixes=.sql
spring.flyway.enabled=true

kafka.bootstrap-servers=host.docker.internal:9092

# Consumer configuration
spring.kafka.consumer.group-id=test-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
