plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.bmuschko.docker-java-application' version '9.4.0' // Add the plugin
}

group = 'com.archexc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0' // Swagger dependency
    implementation 'org.flywaydb:flyway-core:9.22.0' // Replace with the latest version
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation 'org.postgresql:postgresql:42.7.2'
    // https://mvnrepository.com/artifact/org.kie/kie-spring
//    implementation 'org.kie:kie-spring:7.74.1.Final'
//    implementation 'org.kie:kie-api:7.73.0.Final'
    // https://mvnrepository.com/artifact/org.drools/drools-core
    implementation 'org.drools:drools-core:9.44.0.Final'
    implementation 'org.drools:drools-compiler:9.44.0.Final'
    implementation 'org.drools:drools-decisiontables:9.44.0.Final'
    implementation 'org.drools:drools-mvel:9.44.0.Final'
    implementation 'io.projectreactor.kafka:reactor-kafka:1.3.11'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30' //


    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    javaApplication {
        baseImage = 'eclipse-temurin:17-jdk-alpine' // Base image for Java apps
        maintainer = 'aakashkushwah@yahoo.co.in'      // Set the maintainer
        images = ["akushwah/alert-service:latest"] // Docker Hub registry and image name

        // Set the JAR file generated by the Spring Boot build
        ports = [8091] // Expose the application port
    }
}


// Configure the Docker tasks
tasks.named('dockerBuildImage') {
    group = 'Docker'
    description = 'Builds Docker image for the application'
}

tasks.named('dockerPushImage') {
    group = 'Docker'
    description = 'Pushes Docker image to Docker Hub'
}
