plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.bmuschko.docker-java-application' version '9.4.0' // Add the plugin
}

group = 'com.archexc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0' // Swagger dependency
    implementation 'org.flywaydb:flyway-core:9.22.0' // Replace with the latest version
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
    useJUnitPlatform()
}


docker {
    javaApplication {
        baseImage = 'eclipse-temurin:17-jdk-alpine' // Base image for Java apps
        maintainer = 'aakashkushwah@yahoo.co.in'      // Set the maintainer
        images = ["akushwah/acctmgmt-service:latest"] // Docker Hub registry and image name

        // Set the JAR file generated by the Spring Boot build
        ports = [8092] // Expose the application port
    }
}

//docker {
//    javaApplication {
//        // Minikube uses its own Docker daemon
//        dockerClient {
//            // Use the Minikube Docker daemon
//            def output = 'sh -c "minikube docker-env"'.execute().text
//            exec {
//                environment 'DOCKER_HOST', output.split(/\n/).find { it.contains('DOCKER_HOST') }?.split('=')[1]?.replace('"', '')
//                environment 'DOCKER_TLS_VERIFY', output.split(/\n/).find { it.contains('DOCKER_TLS_VERIFY') }?.split('=')[1]
//                environment 'DOCKER_CERT_PATH', output.split(/\n/).find { it.contains('DOCKER_CERT_PATH') }?.split('=')[1]?.replace('"', '')
//                println "Docker environment configured for Minikube."
//            }
//        }
//
//        baseImage = 'eclipse-temurin:17-jdk-alpine'      // Base image for Java apps
//        maintainer = 'aakashkushwah@yahoo.co.in'         // Set maintainer
//        images = ["acctmgmt-service:latest"]            // Image name (no registry prefix)
//
//        // Set the JAR file generated by the Spring Boot build
//        ports = [8092] // Expose the application port
//
//        // Push the image to the Minikube Docker daemon
//        doLast {
//            println "Pushing the Docker image to Minikube's Docker registry..."
//            exec {
//                commandLine 'docker', 'push', 'acctmgmt-service:latest'
//            }
//        }
//    }
//}


// Configure the Docker tasks
tasks.named('dockerBuildImage') {
    group = 'Docker'
    description = 'Builds Docker image for the application'
}

tasks.named('dockerPushImage') {
    group = 'Docker'
    description = 'Pushes Docker image to Docker Hub'
}

